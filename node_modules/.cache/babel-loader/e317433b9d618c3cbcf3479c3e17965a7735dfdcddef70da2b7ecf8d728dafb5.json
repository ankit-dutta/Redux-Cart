{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\n\n// dispatch(uiActions.showNotification({\n//     status:'pending',\n//     title:'sending...',\n//     message:'Sending cart data!'\n//   }))\n\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'sending...',\n      message: 'sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(`https://redux-cart-658ee-default-rtdb.firebaseio.com/cart.json`, {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'success...',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'Sending cart data failed'\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","totalAmount","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["F:/sharp/Project/redux-cart/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\n\r\n\r\nconst cartSlice = createSlice({\r\n    name:'cart',\r\n    initialState: {\r\n        items:[],\r\n        totalQuantity:0,\r\n        totalAmount:0\r\n    },\r\n    reducers:{\r\n        replaceCart(state, action){\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items = action.payload.items;\r\n        },\r\n\r\n        addItemToCart(state, action){\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            if(!existingItem){\r\n                state.items.push({id: newItem.id, price:newItem.price, quantity:1, totalPrice:newItem.price, name:newItem.title})\r\n            } else{\r\n                existingItem.quantity++ ;\r\n               existingItem.totalPrice = existingItem.totalPrice + newItem.price\r\n            }\r\n        },\r\n        removeItemFromCart(state, action){\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n             state.totalQuantity--;\r\n            if(existingItem.quantity === 1 ){\r\n                state.items = state.items.filter(item => item.id !== id)\r\n            }else{\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n\r\n        }\r\n    }\r\n})\r\n\r\n// dispatch(uiActions.showNotification({\r\n//     status:'pending',\r\n//     title:'sending...',\r\n//     message:'Sending cart data!'\r\n//   }))\r\n\r\nexport const sendCartData = (cart) =>{\r\n    return async (dispatch)=>{\r\n        dispatch(\r\n            uiActions.showNotification({\r\n                status:'pending',\r\n                title: 'sending...',\r\n                message: 'sending cart data!',\r\n            })\r\n        );\r\n\r\n        const sendRequest = async ()=>{\r\n            const response =  await fetch(`https://redux-cart-658ee-default-rtdb.firebaseio.com/cart.json`,{\r\n                method:\"PUT\",\r\n                body: JSON.stringify(cart),\r\n            })\r\n    \r\n            if(!response.ok){\r\n                throw new Error('sending cart data failed');\r\n    \r\n                \r\n            }\r\n        };\r\n\r\n        try{\r\n            await sendRequest();\r\n\r\n            dispatch(uiActions.showNotification({\r\n                status:'success',\r\n                title:'success...',\r\n                message:'Sent cart data successfully!'\r\n              }))\r\n            \r\n        }catch(error){\r\n            dispatch(uiActions.showNotification({\r\n                status:'error',\r\n                title:'Error...',\r\n                message:'Sending cart data failed'\r\n              }))\r\n        }\r\n      \r\n           \r\n\r\n            }\r\n}\r\n\r\nexport const cartActions = cartSlice.actions\r\nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}