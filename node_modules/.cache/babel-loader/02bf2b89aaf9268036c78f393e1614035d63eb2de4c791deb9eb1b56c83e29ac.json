{"ast":null,"code":"import { cartActions } from \"./cart-slice\";\nimport { uiActions } from \"./ui-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(`https://redux-cart-658ee-default-rtdb.firebaseio.com/cart.json`);\n      if (!response.ok) {\n        throw new Error('could not fetch cart data');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'Sending cart data failed'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'sending...',\n      message: 'sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(`https://redux-cart-658ee-default-rtdb.firebaseio.com/cart.json`, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          item: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n      if (!response.ok) {\n        throw new Error('sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'success...',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'Sending cart data failed'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["cartActions","uiActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","items","totalQuantity","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","item"],"sources":["F:/sharp/Project/redux-cart/src/store/cart-actions.js"],"sourcesContent":["import { cartActions } from \"./cart-slice\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\n\r\nexport const fetchCartData = () =>{\r\n  return async dispatch =>{\r\n    const fetchData = async () =>{\r\n        const response = await fetch(`https://redux-cart-658ee-default-rtdb.firebaseio.com/cart.json`)\r\n\r\n        if(!response.ok){\r\n            throw new Error('could not fetch cart data');\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        return data;\r\n    };\r\n\r\n    try{\r\n       const cartData = await fetchData();\r\n       dispatch(cartActions.replaceCart({\r\n          items: cartData.items || [],\r\n          totalQuantity : cartData.totalQuantity\r\n       }))\r\n    }catch(error){\r\n        dispatch(uiActions.showNotification({\r\n            status:'error',\r\n            title:'Error...',\r\n            message:'Sending cart data failed'\r\n        }))\r\n    }\r\n  }\r\n}\r\n\r\nexport const sendCartData = (cart) =>{\r\n    return async (dispatch)=>{\r\n        dispatch(\r\n            uiActions.showNotification({\r\n                status:'pending',\r\n                title: 'sending...',\r\n                message: 'sending cart data!',\r\n            })\r\n        );\r\n\r\n        const sendRequest = async ()=>{\r\n            const response =  await fetch(`https://redux-cart-658ee-default-rtdb.firebaseio.com/cart.json`,{\r\n                method:\"PUT\",\r\n                body: JSON.stringify({item: cart.items, totalQuantity: cart.totalQuantity}),\r\n            })\r\n    \r\n            if(!response.ok){\r\n                throw new Error('sending cart data failed');\r\n    \r\n                \r\n            }\r\n        };\r\n\r\n        try{\r\n            await sendRequest();\r\n\r\n            dispatch(uiActions.showNotification({\r\n                status:'success',\r\n                title:'success...',\r\n                message:'Sent cart data successfully!'\r\n              }))\r\n            \r\n        }catch(error){\r\n            dispatch(uiActions.showNotification({\r\n                status:'error',\r\n                title:'Error...',\r\n                message:'Sending cart data failed'\r\n              }))\r\n        }\r\n      \r\n           \r\n\r\n            }\r\n}\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAASC,SAAS,QAAQ,YAAY;AAGtC,OAAO,MAAMC,aAAa,GAAG,MAAK;EAChC,OAAO,MAAMC,QAAQ,IAAG;IACtB,MAAMC,SAAS,GAAG,YAAW;MACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gEAA+D,CAAC;MAE9F,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAChD;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAElC,OAAOD,IAAI;IACf,CAAC;IAED,IAAG;MACA,MAAME,QAAQ,GAAG,MAAMP,SAAS,EAAE;MAClCD,QAAQ,CAACH,WAAW,CAACY,WAAW,CAAC;QAC9BC,KAAK,EAAEF,QAAQ,CAACE,KAAK,IAAI,EAAE;QAC3BC,aAAa,EAAGH,QAAQ,CAACG;MAC5B,CAAC,CAAC,CAAC;IACN,CAAC,QAAMC,KAAK,EAAC;MACTZ,QAAQ,CAACF,SAAS,CAACe,gBAAgB,CAAC;QAChCC,MAAM,EAAC,OAAO;QACdC,KAAK,EAAC,UAAU;QAChBC,OAAO,EAAC;MACZ,CAAC,CAAC,CAAC;IACP;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAI;EACjC,OAAO,MAAOlB,QAAQ,IAAG;IACrBA,QAAQ,CACJF,SAAS,CAACe,gBAAgB,CAAC;MACvBC,MAAM,EAAC,SAAS;MAChBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACb,CAAC,CAAC,CACL;IAED,MAAMG,WAAW,GAAG,YAAU;MAC1B,MAAMjB,QAAQ,GAAI,MAAMC,KAAK,CAAE,gEAA+D,EAAC;QAC3FiB,MAAM,EAAC,KAAK;QACZC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACC,IAAI,EAAEN,IAAI,CAACR,KAAK;UAAEC,aAAa,EAAEO,IAAI,CAACP;QAAa,CAAC;MAC9E,CAAC,CAAC;MAEF,IAAG,CAACT,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAG/C;IACJ,CAAC;IAED,IAAG;MACC,MAAMc,WAAW,EAAE;MAEnBnB,QAAQ,CAACF,SAAS,CAACe,gBAAgB,CAAC;QAChCC,MAAM,EAAC,SAAS;QAChBC,KAAK,EAAC,YAAY;QAClBC,OAAO,EAAC;MACV,CAAC,CAAC,CAAC;IAET,CAAC,QAAMJ,KAAK,EAAC;MACTZ,QAAQ,CAACF,SAAS,CAACe,gBAAgB,CAAC;QAChCC,MAAM,EAAC,OAAO;QACdC,KAAK,EAAC,UAAU;QAChBC,OAAO,EAAC;MACV,CAAC,CAAC,CAAC;IACT;EAII,CAAC;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}